#ifndef BLOGATOR_PARSER_SPECS_MARKDOWN_TOKENISERSTATE_H
#define BLOGATOR_PARSER_SPECS_MARKDOWN_TOKENISERSTATE_H

#include <ostream>

namespace blogator::parser::specs::markdown {
    /**
     * Markdown tokenization states
     */
    enum class TokeniserState {
        ENUM_BEGIN = 0, //used for iteration

        BEFORE_BLOCK = ENUM_BEGIN,
        AFTER_BLOCK,
        AFTER_BLOCK_DOUBLE_NEWLINE,

        BLOCK_BEGIN,
        BLOCK_BEGIN_WHITESPACE,
        BLOCK_BEGIN_AFTER_WHITESPACE,
        BLOCK_BEGIN_IN_CONTAINER_BLOCK,
        BLOCK_BEGIN_UNDERSCORE,
        BLOCK_BEGIN_UNDERSCORE_UNDERSCORE,
        BLOCK_BEGIN_ASTERISK,
        BLOCK_BEGIN_ASTERISK_SPACE,
        BLOCK_BEGIN_ASTERISK_ASTERISK,
        BLOCK_BEGIN_HYPHEN,
        BLOCK_BEGIN_HYPHEN_HYPHEN,
        BLOCK_BEGIN_HYPHEN_SPACE,
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET, //"- ["
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_RIGHT_SQUARE_BRACKET, //"- []"
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_SPACE, //"- [ "
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_SPACE_RIGHT_SQUARE_BRACKET, //"- [ ]"
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_LOWERCASE_X, //"- [x"
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_LOWERCASE_X_RIGHT_SQUARE_BRACKET, //"- [x]"
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_UPPERCASE_X, //"- [X"
        BLOCK_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_UPPERCASE_X_RIGHT_SQUARE_BRACKET, //"- [X]"
        BLOCK_BEGIN_TASK_LIST_CHECKED_ITEM,
        BLOCK_BEGIN_TASK_LIST_UNCHECKED_ITEM,
        BLOCK_BEGIN_UNORDERED_LIST_ITEM_HYPHEN,

        LINE_BEGIN,
        LINE_BEGIN_ASTERISK,
        LINE_BEGIN_EQUAL_SIGN,
        LINE_BEGIN_EQUAL_SIGN_EQUAL_SIGN,
        LINE_BEGIN_PLUS_SIGN,
        LINE_BEGIN_HYPHEN,
        LINE_BEGIN_HYPHEN_HYPHEN,
        LINE_BEGIN_HYPHEN_SPACE,
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET, //"- ["
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_RIGHT_SQUARE_BRACKET, //"- []"
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_SPACE, //"- [ "
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_SPACE_RIGHT_SQUARE_BRACKET, //"- [ ]"
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_LOWERCASE_X, //"- [x"
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_LOWERCASE_X_RIGHT_SQUARE_BRACKET, //"- [x]"
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_UPPERCASE_X, //"- [X"
        LINE_BEGIN_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_UPPERCASE_X_RIGHT_SQUARE_BRACKET, //"- [X]"
        LINE_BEGIN_TASK_LIST_CHECKED_ITEM,
        LINE_BEGIN_TASK_LIST_UNCHECKED_ITEM,
        LINE_BEGIN_UNORDERED_LIST_ITEM_HYPHEN,
        LINE_BEGIN_LOWER_ALPHA,
        LINE_BEGIN_LOWER_ALPHA_FULL_STOP,
        LINE_BEGIN_UPPER_ALPHA,
        LINE_BEGIN_UPPER_ALPHA_FULL_STOP,
        LINE_BEGIN_NUMERAL,
        LINE_BEGIN_NUMERAL_FULL_STOP,
        LINE_BEGIN_LEFT_SQUARE_BRACKET,
        LINE_BEGIN_LEFT_SQUARE_BRACKET_CIRCUMFLEX_ACCENT, //"[^"
        LINE_BEGIN_FOOTNOTE_ID, //"[^..."
        LINE_BEGIN_FOOTNOTE_ID_RIGHT_SQUARE_BRACKET, //"[^...]"
        LINE_BEGIN_FOOTNOTE_ID_RIGHT_SQUARE_BRACKET_COLON, //"[^...]:"
        LINE_BEGIN_COLON,
        LINE_BEGIN_COLON_SPACE,
        LINE_BEGIN_INSIDE_PARAGRAPH_BLOCK,

        NEWLINE_CONSUME_PREFIXES_BEGIN,
        NEWLINE_CONSUME_PREFIXES_CONTINUE,
        NEWLINE_CONSUME_PREFIXES_END,
        NEWLINE_CONSUME_WHITESPACE,
        NEWLINE_CONSUME_BLOCKQUOTE_PREFIX,
        NEWLINE_CONSUME_LIST_CONTAINER,
        NEWLINE_CONSUME_LIST_PREFIX,
        NEWLINE_CONSUME_LIST_PREFIX_NUMERIC,
        NEWLINE_CONSUME_LIST_PREFIX_NUMERIC_FULL_STOP,
        NEWLINE_CONSUME_LIST_PREFIX_ALPHA_LOWER,
        NEWLINE_CONSUME_LIST_PREFIX_ALPHA_LOWER_FULL_STOP,
        NEWLINE_CONSUME_LIST_PREFIX_ALPHA_UPPER,
        NEWLINE_CONSUME_LIST_PREFIX_ALPHA_UPPER_FULL_STOP,
        NEWLINE_CONSUME_LIST_PREFIX_ASTERISK,
        NEWLINE_CONSUME_LIST_PREFIX_PLUS_SIGN,
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN,
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE,
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET, //"- ["
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_RIGHT_SQUARE_BRACKET, //"- []"
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_SPACE, //"- [ "
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_SPACE_RIGHT_SQUARE_BRACKET, //"- [ ]"
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_LOWERCASE_X, //"- [x"
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_LOWERCASE_X_RIGHT_SQUARE_BRACKET, //"- [x]"
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_UPPERCASE_X, //"- [X"
        NEWLINE_CONSUME_LIST_PREFIX_HYPHEN_SPACE_LEFT_SQUARE_BRACKET_UPPERCASE_X_RIGHT_SQUARE_BRACKET, //"- [X]"
        NEWLINE_CONSUME_LIST_PREFIX_LEFT_SQUARE_BRACKET, //"["
        NEWLINE_CONSUME_LIST_PREFIX_LEFT_SQUARE_BRACKET_CIRCUMFLEX_ACCENT, //"[^"
        NEWLINE_CONSUME_LIST_PREFIX_FOOTNOTE_ID, //"[^..."
        NEWLINE_CONSUME_LIST_PREFIX_FOOTNOTE_ID_RIGHT_SQUARE_BRACKET, //"[^...]"
        NEWLINE_CONSUME_LIST_PREFIX_FOOTNOTE_ID_RIGHT_SQUARE_BRACKET_COLON, //"[^...]:"
        NEWLINE_CONSUME_LIST_PREFIX_TASK_LIST_CHECKED_ITEM,
        NEWLINE_CONSUME_LIST_PREFIX_TASK_LIST_UNCHECKED_ITEM,
        NEWLINE_CONSUME_LIST_PREFIX_UNORDERED_LIST_ITEM_HYPHEN,
        NEWLINE_CONSUME_LIST_PREFIX_FOOTNOTE_DEFINITION_ITEM,
        NEWLINE_CONSUME_LIST_PREFIX_ABORT,

        NEWLINE_AFTER_EMPTY_LINE,

        PARAGRAPH_BLOCK_NEW_PARAGRAPH_BLOCK,
        PARAGRAPH_BLOCK_LINE_CONTENT,

        INLINE_CONTENT_SINGLE_SPACE,
        INLINE_CONTENT_LINE_BREAK,
        INLINE_CONTENT_BANG,
        INLINE_CONTENT_LEFT_SQUARE_BRACKET,
        INLINE_CONTENT_LEFT_SQUARE_BRACKET_CIRCUMFLEX_ACCENT,
        INLINE_CONTENT_LEFT_CURLY_BRACKET,
        INLINE_CONTENT_LEFT_CURLY_BRACKET_NUMBER_SIGN,
        INLINE_CONTENT_DOUBLE_LEFT_CURLY_BRACKET,
        INLINE_CONTENT_FORMATTING,
        INLINE_CONTENT_INLINE_CODE_SINGLE_GRAVE_ACCENT,
        INLINE_CONTENT_INLINE_CODE_DOUBLE_GRAVE_ACCENT,

        ESCAPED_CHARACTER_TO_TOKEN_QUEUE,
        ESCAPED_CHARACTER_TO_PENDING_CHAR_BUFFER,

        HORIZONTAL_RULE_ASTERISK,
        HORIZONTAL_RULE_HYPHEN,
        HORIZONTAL_RULE_UNDERSCORE,
        HORIZONTAL_RULE_WHITESPACE,

        IMAGE_ALT_TEXT,
        IMAGE_AFTER_ALT_TEXT,
        IMAGE_SOURCE,

        HYPERLINK_TEXT,
        HYPERLINK_AFTER_TEXT,
        HYPERLINK_URL,

        HEADING_BLOCK_ATX_DEFINITION,
        HEADING_BLOCK_ATX_BEFORE_TEXT,
        HEADING_BLOCK_ATX_TEXT,
        HEADING_BLOCK_ATX_TEXT_CLOSING,
        HEADING_BLOCK_ATX_TEXT_AFTER_CLOSING,
        HEADING_BLOCK_SETEXT_FMT_EQUAL_SIGN,
        HEADING_BLOCK_SETEXT_FMT_HYPHEN,

        CODE_BLOCK_DECLARATION,
        CODE_BLOCK_BEFORE_LANGUAGE_TAG,
        CODE_BLOCK_INLINED_CONTENT,
        CODE_BLOCK_LANGUAGE_TAG,
        CODE_BLOCK_WHITESPACE_AFTER_LANGUAGE_TAG,
        CODE_BLOCK_CONTENT,
        CODE_BLOCK_CONTENT_NEWLINE,
        CODE_BLOCK_CONSUME_WHITESPACE,
        CODE_BLOCK_END,

        BLOCKQUOTE_NEW_BLOCKQUOTE_BLOCK,
        BLOCKQUOTE_BLOCK_BEGIN,

        BLOCK_ID_NAME,
        AFTER_BLOCK_ID,

        FOOTNOTE_REF_ID,
        AFTER_FOOTNOTE_REF,

        TABLE_BEGIN,
        TABLE_COL_HEADING_NEW,
        TABLE_COL_HEADING_CONTENT,
        TABLE_DEFINITION_ROW_BEGIN,
        TABLE_COL_DEFINITION_NEW,
        TABLE_COL_DEFINITION,
        TABLE_COL_DEFINITION_END,
        TABLE_DEFINITION_ROW_END,
        TABLE_DATA_ROW_BEGIN,
        TABLE_DATA_CELL_NEW,
        TABLE_DATA_CELL_CONTENT,
        TABLE_DATA_ROW_END,
        TABLE_ABORT,

        END_OF_FILE,

        ENUM_END = END_OF_FILE, //used for iteration
    };

    std::ostream & operator <<( std::ostream &os, TokeniserState state );
}

namespace blogator {
    std::string to_string( blogator::parser::specs::markdown::TokeniserState state );
}

#endif //BLOGATOR_PARSER_SPECS_MARKDOWN_TOKENISERSTATE_H